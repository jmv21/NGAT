<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuSettings.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="dlgSaveAs.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>137, 17</value>
  </metadata>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>264, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>37</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAAACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AABxaUwAKyohIAEBASILCQgcERAMDxsaGBkZGBMUGyUfAQ8QDAUKCQkKAwMDMgICASoEBAM6KScjJgMD
        A0MDAwJMAgICVi8wKnAqKSMvBgcGYS0sJ0cvMSymLy4oYC0sJn0sKyWKMC8oPDIwKpkzNS9Uv7ql/pO5
        yP6t58pBr+rPIbPr0JKt58pkKL7s/qjpyeew6s59JSMfr5nVtta979fisOnNr6TkxduRyKzJaJN/nSMi
        HsKJ0KXpdaaMr7vv1sy47dO9hrecgXmgjD+Z1LWdQ19QgYW8o7RmiHd8gLiY2CQiH+tXcmKSMjEr4UOi
        ve9ym4XKzO/6/VmSob+n6Mn/ud63/6fnyf+E057/yubM/6jpyv/K58z/peXH/7/w2P+l5sj/te3T/6nk
        vf/y49P/t+7U/zUzLf+069H/69a//4fXov+F05//rOnM/7Ht0P+679b/3e/a/7Lr0P+t7M7/wPHZ/6ns
        zP+k5Mb/s+3S/+jRuf/O6M7/vO/X//Hh0P+v6s7/2e7Z/6bjuv+e4LX/5/Pl/+z06f+q6Mr/4sSu/9jm
        1P+i4bf/PTo8/zc2Mf/s2ML/RkJF/9jt1v88Ojb/ouLD/+Py4v/s3Mb/MzEy/zAuLf+H16D/7/ft/zg1
        N/+g38H/QT5A/0VDP//S6tH/QkA6/9zo2P/+//7/g7CY/9bs1P+z5s3/5OHI/9Pozf/D07j/Kyko/+jU
        vf/Q4Mn/mNO4/4PQnf+d277/4PDe/+/ezP+It57/ldC1/0lFSv+b2Lv/5si0/63lyP/g6tv/gIHM/5HE
        qv+m3cT/rd/H/+Tt3v+Vy7D/3b+o/8zavv+ExKn/uurS/9Th0P/U69L/2uHG/4y+pP/M2sb/odS8//Pl
        1/8lIyH/lZfV/+bv4//q48v/+fz4//Xp3f9/qJL/wdy9/5K5pf/r6dD/h47N//P58v+QzrT/dq6G/6fX
        wf/F4sX/5OjR/7fRsP/37uT/3dnB/7LJqv+BzJr/u8qx/7fZtP+MzLD/3unP/4nJq/+uw6X/e7mO/57M
        tf+P2ar/wfHa/9DIsP/S0bn/ecGS/5vTr/9PU0r/4+Lq/2B3af/59O3/ZoFx/97PuP+bw67/eqGM/9C3
        o/+Y3bL/fseW/1VlWf/r797/cpSB/0lMQ/9OWlP/jqfK/8atmf94mYb/mJmL/2uId/+wm4v/jY2A/15b
        Uv9bbmD/fXdr/53RyP+L3vb/uaOR/4uBdP9vuI7/ueDG/21pX/+bxMv/najW/6KPf/+AwpX/o7rV/6vP
        1P+u3dP/o6SV/7Csmv9qk3v/Z9T0/3l7u/93i3v/b6SB/4Weu/9ucqH/TMnu/6rn+f90j6n/UVxy/1F4
        hv+2rML/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1wUGBgYH1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABwgIBAYECQgHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAMGARISEgEEAwXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwkFGDoZERkWDQUIBBEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQgGEhERGBgYEToXAQQIBwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUJJRQRGBFqERYXERQNBgMHAAAAAAAAAAAA
        AAAAAAAAAAAAAG8HB296AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAywUFhn6IhQUGhgRERIlBAgFBwAA
        AAAAAAAAAAAAAAcICAkEBgYECQgIBgcAAAAAAAAAAAAAAAAAAAAAAABrBQksFhbk9HelpSUSERQFCg8Q
        BAQDCAV8AAAAyXwGCAMEBA8PCg8PCg8QEwgGAwMEBnwAAAAAAAAAAAAAAAAHCQYDDwP7+3d0haWlLCws
        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
</value>
  </data>
</root>